// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(FoxsoundiContext))]
    [Migration("20190629171105_Initial-Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Height");

                    b.Property<string>("Url");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Database.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int>("IsAdmin");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<int?>("PlayerId");

                    b.Property<int?>("PreferencesId");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("PreferencesId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Database.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById");

                    b.Property<int?>("FrontImageId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FrontImageId");

                    b.ToTable("Playlist");
                });

            modelBuilder.Entity("Database.Preference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Theme");

                    b.HasKey("Id");

                    b.ToTable("Preference");
                });

            modelBuilder.Entity("Database.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Likes");

                    b.Property<int?>("PlayerId");

                    b.Property<int?>("PlaylistId");

                    b.Property<int>("Source");

                    b.Property<string>("SourceId");

                    b.Property<int>("Views");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Track");
                });

            modelBuilder.Entity("Database.Player", b =>
                {
                    b.HasOne("Database.Player")
                        .WithMany("Friends")
                        .HasForeignKey("PlayerId");

                    b.HasOne("Database.Preference", "Preferences")
                        .WithMany()
                        .HasForeignKey("PreferencesId");
                });

            modelBuilder.Entity("Database.Playlist", b =>
                {
                    b.HasOne("Database.Player", "CreatedBy")
                        .WithMany("FavouritePlaylists")
                        .HasForeignKey("CreatedById");

                    b.HasOne("Database.Image", "FrontImage")
                        .WithMany()
                        .HasForeignKey("FrontImageId");
                });

            modelBuilder.Entity("Database.Track", b =>
                {
                    b.HasOne("Database.Player")
                        .WithMany("FavouriteTracks")
                        .HasForeignKey("PlayerId");

                    b.HasOne("Database.Playlist")
                        .WithMany("Tracks")
                        .HasForeignKey("PlaylistId");
                });
#pragma warning restore 612, 618
        }
    }
}
